{"ast":null,"code":"$(function () {\n  'use strict';\n  /* ChartJS\n   * -------\n   * Here we will create a few charts using ChartJS\n   */\n  //-----------------------\n  //- MONTHLY SALES CHART -\n  //-----------------------\n  // Get context with jQuery - using jQuery's .get() method.\n\n  var salesChartCanvas = $('#salesChart').get(0).getContext('2d');\n  var salesChartData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [{\n      label: 'Digital Goods',\n      backgroundColor: 'rgba(60,141,188,0.9)',\n      borderColor: 'rgba(60,141,188,0.8)',\n      pointRadius: false,\n      pointColor: '#3b8bba',\n      pointStrokeColor: 'rgba(60,141,188,1)',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(60,141,188,1)',\n      data: [28, 48, 40, 19, 86, 27, 90]\n    }, {\n      label: 'Electronics',\n      backgroundColor: 'rgba(210, 214, 222, 1)',\n      borderColor: 'rgba(210, 214, 222, 1)',\n      pointRadius: false,\n      pointColor: 'rgba(210, 214, 222, 1)',\n      pointStrokeColor: '#c1c7d1',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(220,220,220,1)',\n      data: [65, 59, 80, 81, 56, 55, 40]\n    }]\n  };\n  var salesChartOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          display: false\n        }\n      }]\n    }\n  }; // This will get the first returned node in the jQuery collection.\n\n  var salesChart = new Chart(salesChartCanvas, {\n    type: 'line',\n    data: salesChartData,\n    options: salesChartOptions\n  }); //---------------------------\n  //- END MONTHLY SALES CHART -\n  //---------------------------\n  //-------------\n  //- PIE CHART -\n  //-------------\n  // Get context with jQuery - using jQuery's .get() method.\n\n  var pieChartCanvas = $('#pieChart').get(0).getContext('2d');\n  var pieData = {\n    labels: ['Chrome', 'IE', 'FireFox', 'Safari', 'Opera', 'Navigator'],\n    datasets: [{\n      data: [700, 500, 400, 600, 300, 100],\n      backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de']\n    }]\n  };\n  var pieOptions = {\n    legend: {\n      display: false\n    }\n  }; //Create pie or douhnut chart\n  // You can switch between pie and douhnut using the method below.\n\n  var pieChart = new Chart(pieChartCanvas, {\n    type: 'doughnut',\n    data: pieData,\n    options: pieOptions\n  }); //-----------------\n  //- END PIE CHART -\n  //-----------------\n\n  /* jVector Maps\n   * ------------\n   * Create a world map with markers\n   */\n\n  $('#world-map-markers').mapael({\n    map: {\n      name: \"usa_states\",\n      zoom: {\n        enabled: true,\n        maxLevel: 10\n      }\n    }\n  }); // $('#world-map-markers').vectorMap({\n  //   map              : 'world_en',\n  //   normalizeFunction: 'polynomial',\n  //   hoverOpacity     : 0.7,\n  //   hoverColor       : false,\n  //   backgroundColor  : 'transparent',\n  //   regionStyle      : {\n  //     initial      : {\n  //       fill            : 'rgba(210, 214, 222, 1)',\n  //       'fill-opacity'  : 1,\n  //       stroke          : 'none',\n  //       'stroke-width'  : 0,\n  //       'stroke-opacity': 1\n  //     },\n  //     hover        : {\n  //       'fill-opacity': 0.7,\n  //       cursor        : 'pointer'\n  //     },\n  //     selected     : {\n  //       fill: 'yellow'\n  //     },\n  //     selectedHover: {}\n  //   },\n  //   markerStyle      : {\n  //     initial: {\n  //       fill  : '#00a65a',\n  //       stroke: '#111'\n  //     }\n  //   },\n  //   markers          : [\n  //     {\n  //       latLng: [41.90, 12.45],\n  //       name  : 'Vatican City'\n  //     },\n  //     {\n  //       latLng: [43.73, 7.41],\n  //       name  : 'Monaco'\n  //     },\n  //     {\n  //       latLng: [-0.52, 166.93],\n  //       name  : 'Nauru'\n  //     },\n  //     {\n  //       latLng: [-8.51, 179.21],\n  //       name  : 'Tuvalu'\n  //     },\n  //     {\n  //       latLng: [43.93, 12.46],\n  //       name  : 'San Marino'\n  //     },\n  //     {\n  //       latLng: [47.14, 9.52],\n  //       name  : 'Liechtenstein'\n  //     },\n  //     {\n  //       latLng: [7.11, 171.06],\n  //       name  : 'Marshall Islands'\n  //     },\n  //     {\n  //       latLng: [17.3, -62.73],\n  //       name  : 'Saint Kitts and Nevis'\n  //     },\n  //     {\n  //       latLng: [3.2, 73.22],\n  //       name  : 'Maldives'\n  //     },\n  //     {\n  //       latLng: [35.88, 14.5],\n  //       name  : 'Malta'\n  //     },\n  //     {\n  //       latLng: [12.05, -61.75],\n  //       name  : 'Grenada'\n  //     },\n  //     {\n  //       latLng: [13.16, -61.23],\n  //       name  : 'Saint Vincent and the Grenadines'\n  //     },\n  //     {\n  //       latLng: [13.16, -59.55],\n  //       name  : 'Barbados'\n  //     },\n  //     {\n  //       latLng: [17.11, -61.85],\n  //       name  : 'Antigua and Barbuda'\n  //     },\n  //     {\n  //       latLng: [-4.61, 55.45],\n  //       name  : 'Seychelles'\n  //     },\n  //     {\n  //       latLng: [7.35, 134.46],\n  //       name  : 'Palau'\n  //     },\n  //     {\n  //       latLng: [42.5, 1.51],\n  //       name  : 'Andorra'\n  //     },\n  //     {\n  //       latLng: [14.01, -60.98],\n  //       name  : 'Saint Lucia'\n  //     },\n  //     {\n  //       latLng: [6.91, 158.18],\n  //       name  : 'Federated States of Micronesia'\n  //     },\n  //     {\n  //       latLng: [1.3, 103.8],\n  //       name  : 'Singapore'\n  //     },\n  //     {\n  //       latLng: [1.46, 173.03],\n  //       name  : 'Kiribati'\n  //     },\n  //     {\n  //       latLng: [-21.13, -175.2],\n  //       name  : 'Tonga'\n  //     },\n  //     {\n  //       latLng: [15.3, -61.38],\n  //       name  : 'Dominica'\n  //     },\n  //     {\n  //       latLng: [-20.2, 57.5],\n  //       name  : 'Mauritius'\n  //     },\n  //     {\n  //       latLng: [26.02, 50.55],\n  //       name  : 'Bahrain'\n  //     },\n  //     {\n  //       latLng: [0.33, 6.73],\n  //       name  : 'São Tomé and Príncipe'\n  //     }\n  //   ]\n  // })\n});","map":{"version":3,"sources":["/home/son/Documents/reactjs/src/template/template_admin/dist/js/pages/dashboard2.js"],"names":["$","salesChartCanvas","get","getContext","salesChartData","labels","datasets","label","backgroundColor","borderColor","pointRadius","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","data","salesChartOptions","maintainAspectRatio","responsive","legend","display","scales","xAxes","gridLines","yAxes","salesChart","Chart","type","options","pieChartCanvas","pieData","pieOptions","pieChart","mapael","map","name","zoom","enabled","maxLevel"],"mappings":"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":["$(function () {\n\n  'use strict'\n\n  /* ChartJS\n   * -------\n   * Here we will create a few charts using ChartJS\n   */\n\n  //-----------------------\n  //- MONTHLY SALES CHART -\n  //-----------------------\n\n  // Get context with jQuery - using jQuery's .get() method.\n  var salesChartCanvas = $('#salesChart').get(0).getContext('2d')\n\n  var salesChartData = {\n    labels  : ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [\n      {\n        label               : 'Digital Goods',\n        backgroundColor     : 'rgba(60,141,188,0.9)',\n        borderColor         : 'rgba(60,141,188,0.8)',\n        pointRadius          : false,\n        pointColor          : '#3b8bba',\n        pointStrokeColor    : 'rgba(60,141,188,1)',\n        pointHighlightFill  : '#fff',\n        pointHighlightStroke: 'rgba(60,141,188,1)',\n        data                : [28, 48, 40, 19, 86, 27, 90]\n      },\n      {\n        label               : 'Electronics',\n        backgroundColor     : 'rgba(210, 214, 222, 1)',\n        borderColor         : 'rgba(210, 214, 222, 1)',\n        pointRadius         : false,\n        pointColor          : 'rgba(210, 214, 222, 1)',\n        pointStrokeColor    : '#c1c7d1',\n        pointHighlightFill  : '#fff',\n        pointHighlightStroke: 'rgba(220,220,220,1)',\n        data                : [65, 59, 80, 81, 56, 55, 40]\n      },\n    ]\n  }\n\n  var salesChartOptions = {\n    maintainAspectRatio : false,\n    responsive : true,\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines : {\n          display : false,\n        }\n      }],\n      yAxes: [{\n        gridLines : {\n          display : false,\n        }\n      }]\n    }\n  }\n\n  // This will get the first returned node in the jQuery collection.\n  var salesChart = new Chart(salesChartCanvas, { \n      type: 'line', \n      data: salesChartData, \n      options: salesChartOptions\n    }\n  )\n\n  //---------------------------\n  //- END MONTHLY SALES CHART -\n  //---------------------------\n\n  //-------------\n  //- PIE CHART -\n  //-------------\n  // Get context with jQuery - using jQuery's .get() method.\n    var pieChartCanvas = $('#pieChart').get(0).getContext('2d')\n    var pieData        = {\n      labels: [\n          'Chrome', \n          'IE',\n          'FireFox', \n          'Safari', \n          'Opera', \n          'Navigator', \n      ],\n      datasets: [\n        {\n          data: [700,500,400,600,300,100],\n          backgroundColor : ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de'],\n        }\n      ]\n    }\n    var pieOptions     = {\n      legend: {\n        display: false\n      }\n    }\n    //Create pie or douhnut chart\n    // You can switch between pie and douhnut using the method below.\n    var pieChart = new Chart(pieChartCanvas, {\n      type: 'doughnut',\n      data: pieData,\n      options: pieOptions      \n    })\n\n  //-----------------\n  //- END PIE CHART -\n  //-----------------\n\n  /* jVector Maps\n   * ------------\n   * Create a world map with markers\n   */\n  $('#world-map-markers').mapael({\n      map: {\n        name : \"usa_states\",\n        zoom: {\n          enabled: true,\n          maxLevel: 10\n        },\n      },\n    }\n  );\n\n  // $('#world-map-markers').vectorMap({\n  //   map              : 'world_en',\n  //   normalizeFunction: 'polynomial',\n  //   hoverOpacity     : 0.7,\n  //   hoverColor       : false,\n  //   backgroundColor  : 'transparent',\n  //   regionStyle      : {\n  //     initial      : {\n  //       fill            : 'rgba(210, 214, 222, 1)',\n  //       'fill-opacity'  : 1,\n  //       stroke          : 'none',\n  //       'stroke-width'  : 0,\n  //       'stroke-opacity': 1\n  //     },\n  //     hover        : {\n  //       'fill-opacity': 0.7,\n  //       cursor        : 'pointer'\n  //     },\n  //     selected     : {\n  //       fill: 'yellow'\n  //     },\n  //     selectedHover: {}\n  //   },\n  //   markerStyle      : {\n  //     initial: {\n  //       fill  : '#00a65a',\n  //       stroke: '#111'\n  //     }\n  //   },\n  //   markers          : [\n  //     {\n  //       latLng: [41.90, 12.45],\n  //       name  : 'Vatican City'\n  //     },\n  //     {\n  //       latLng: [43.73, 7.41],\n  //       name  : 'Monaco'\n  //     },\n  //     {\n  //       latLng: [-0.52, 166.93],\n  //       name  : 'Nauru'\n  //     },\n  //     {\n  //       latLng: [-8.51, 179.21],\n  //       name  : 'Tuvalu'\n  //     },\n  //     {\n  //       latLng: [43.93, 12.46],\n  //       name  : 'San Marino'\n  //     },\n  //     {\n  //       latLng: [47.14, 9.52],\n  //       name  : 'Liechtenstein'\n  //     },\n  //     {\n  //       latLng: [7.11, 171.06],\n  //       name  : 'Marshall Islands'\n  //     },\n  //     {\n  //       latLng: [17.3, -62.73],\n  //       name  : 'Saint Kitts and Nevis'\n  //     },\n  //     {\n  //       latLng: [3.2, 73.22],\n  //       name  : 'Maldives'\n  //     },\n  //     {\n  //       latLng: [35.88, 14.5],\n  //       name  : 'Malta'\n  //     },\n  //     {\n  //       latLng: [12.05, -61.75],\n  //       name  : 'Grenada'\n  //     },\n  //     {\n  //       latLng: [13.16, -61.23],\n  //       name  : 'Saint Vincent and the Grenadines'\n  //     },\n  //     {\n  //       latLng: [13.16, -59.55],\n  //       name  : 'Barbados'\n  //     },\n  //     {\n  //       latLng: [17.11, -61.85],\n  //       name  : 'Antigua and Barbuda'\n  //     },\n  //     {\n  //       latLng: [-4.61, 55.45],\n  //       name  : 'Seychelles'\n  //     },\n  //     {\n  //       latLng: [7.35, 134.46],\n  //       name  : 'Palau'\n  //     },\n  //     {\n  //       latLng: [42.5, 1.51],\n  //       name  : 'Andorra'\n  //     },\n  //     {\n  //       latLng: [14.01, -60.98],\n  //       name  : 'Saint Lucia'\n  //     },\n  //     {\n  //       latLng: [6.91, 158.18],\n  //       name  : 'Federated States of Micronesia'\n  //     },\n  //     {\n  //       latLng: [1.3, 103.8],\n  //       name  : 'Singapore'\n  //     },\n  //     {\n  //       latLng: [1.46, 173.03],\n  //       name  : 'Kiribati'\n  //     },\n  //     {\n  //       latLng: [-21.13, -175.2],\n  //       name  : 'Tonga'\n  //     },\n  //     {\n  //       latLng: [15.3, -61.38],\n  //       name  : 'Dominica'\n  //     },\n  //     {\n  //       latLng: [-20.2, 57.5],\n  //       name  : 'Mauritius'\n  //     },\n  //     {\n  //       latLng: [26.02, 50.55],\n  //       name  : 'Bahrain'\n  //     },\n  //     {\n  //       latLng: [0.33, 6.73],\n  //       name  : 'São Tomé and Príncipe'\n  //     }\n  //   ]\n  // })\n\n})\n"]},"metadata":{},"sourceType":"module"}